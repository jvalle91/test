DROP TABLE IF EXISTS PRICES;
DROP TABLE IF EXISTS BRANDS;
DROP TABLE IF EXISTS USERS;

CREATE TABLE USERS (
    USERNAME VARCHAR(32) NOT NULL PRIMARY KEY,
    PASSWORD VARCHAR(255)
);

CREATE TABLE BRANDS (
    ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR(100) NOT NULL UNIQUE,
    DESCRIPTION VARCHAR(255),
    COUNTRY VARCHAR(50),
    CREATED_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    ACTIVE BOOLEAN DEFAULT TRUE
);

CREATE TABLE PRICES (
    ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    BRAND_ID BIGINT NOT NULL,
    START_DATE TIMESTAMP NOT NULL,
    END_DATE TIMESTAMP NOT NULL,
    PRICE_LIST INTEGER NOT NULL,
    PRODUCT_ID BIGINT NOT NULL,
    PRIORITY INTEGER NOT NULL,
    PRICE DECIMAL(10,2) NOT NULL,
    CURR VARCHAR(3) NOT NULL
);

ALTER TABLE PRICES ADD CONSTRAINT fk_prices_brand 
    FOREIGN KEY (BRAND_ID) REFERENCES BRANDS(ID);

CREATE INDEX idx_prices_brand_product_date ON PRICES (BRAND_ID, PRODUCT_ID, START_DATE, END_DATE);
CREATE INDEX idx_prices_priority ON PRICES (PRIORITY);
CREATE INDEX idx_prices_date_range ON PRICES (START_DATE, END_DATE);
CREATE INDEX idx_prices_product ON PRICES (PRODUCT_ID);
CREATE INDEX idx_prices_brand ON PRICES (BRAND_ID);

COMMENT ON TABLE PRICES IS 'Table that stores final prices (RRP) and applicable rates for products by brand chain within date ranges';
COMMENT ON COLUMN PRICES.BRAND_ID IS 'Foreign key of the group chain (1 = ZARA)';
COMMENT ON COLUMN PRICES.START_DATE IS 'Start date and time for price application';
COMMENT ON COLUMN PRICES.END_DATE IS 'End date and time for price application';
COMMENT ON COLUMN PRICES.PRICE_LIST IS 'Applicable price rate identifier';
COMMENT ON COLUMN PRICES.PRODUCT_ID IS 'Product code identifier';
COMMENT ON COLUMN PRICES.PRIORITY IS 'Price application disambiguator. Higher value = higher priority';
COMMENT ON COLUMN PRICES.PRICE IS 'Final selling price';
COMMENT ON COLUMN PRICES.CURR IS 'ISO currency code (3 characters)';

-- Addtional constraints for data validation
ALTER TABLE PRICES ADD CONSTRAINT chk_dates CHECK (START_DATE <= END_DATE);
ALTER TABLE PRICES ADD CONSTRAINT chk_price_positive CHECK (PRICE >= 0);
ALTER TABLE PRICES ADD CONSTRAINT chk_priority_positive CHECK (PRIORITY >= 0);
ALTER TABLE PRICES ADD CONSTRAINT chk_currency_length CHECK (LENGTH(CURR) = 3);